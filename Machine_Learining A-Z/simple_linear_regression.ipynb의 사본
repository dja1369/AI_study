{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"simple_linear_regression.ipynb의 사본","provenance":[{"file_id":"1W1U_F9bdDNPP024K9T3IWxkshkXBo8O8","timestamp":1647848264492}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"l_LulNCC8z96"},"source":["# Simple Linear Regression"]},{"cell_type":"markdown","metadata":{"id":"xpXdowrE9DxW"},"source":["## Importing the libraries"]},{"cell_type":"code","source":["import numpy as np \n","import matplotlib.pyplot as plt\n","import pandas as pd"],"metadata":{"id":"KMHTijPpaapN","executionInfo":{"status":"ok","timestamp":1647958796604,"user_tz":-540,"elapsed":289,"user":{"displayName":"이덕수","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04402217723891097609"}}},"execution_count":42,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6JhpWJi59J1p"},"source":["## Importing the dataset"]},{"cell_type":"code","source":["dataset = pd.read_csv('Salary_Data.csv')\n","x = dataset.iloc[:, :-1].values # 행전부와 마지막 열을 제외한 모든열의 값을 가져옴\n","y = dataset.iloc[:, -1].values  # 행전부와 마지막 열만 가져옴 "],"metadata":{"id":"lJe43d-Tayn3","executionInfo":{"status":"ok","timestamp":1647958796927,"user_tz":-540,"elapsed":3,"user":{"displayName":"이덕수","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04402217723891097609"}}},"execution_count":43,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"AyhQaTwP9RzG"},"source":["## Splitting the dataset into the Training set and Test set"]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state = 0)"],"metadata":{"id":"KlcQV3FhbeTM","executionInfo":{"status":"ok","timestamp":1647958796928,"user_tz":-540,"elapsed":4,"user":{"displayName":"이덕수","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04402217723891097609"}}},"execution_count":44,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ZijQwFMQ9itx"},"source":["## Training the Simple Linear Regression model on the Training set"]},{"cell_type":"code","source":["from sklearn.linear_model import LinearRegression \n","regressor = LinearRegression() # 단순 선형회귀 모델\n","regressor.fit(x_train,y_train) \n","# x_train은 특성을 포함함 == 훈련세트의 독립 변수 \n","# y_train은 훈련 세트의 위치에서 종속 변수 벡터를 포함한다 즉 예측할 데이터들임.\n","# fit메소드는 선형 회귀 클래스에 속하는 한 가지 메소드인데 명령만 포함되는게 아니라 도구까지도 포함되는데 이를 메소드 라 하고 \n","# 도구는 행동을 완료하는 역활을 한다. Ex) 특정 훈련세트에서 모델을 훈련한다던지.. "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"21OBm3h542oX","executionInfo":{"status":"ok","timestamp":1647958796928,"user_tz":-540,"elapsed":3,"user":{"displayName":"이덕수","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04402217723891097609"}},"outputId":"47b1f18d-e20e-4085-9399-5777168e47af"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"]},"metadata":{},"execution_count":45}]},{"cell_type":"markdown","metadata":{"id":"wa2T1Lq89o5H"},"source":["## Predicting the Test set results 결과값 예측\n","\n"]},{"cell_type":"code","source":["y_pred = regressor.predict(x_test) # predict는 인자를 예측하는 함수이다 예측하기 위해선 특성을 입력해야 한다 즉 x값 입력."],"metadata":{"id":"4T_p5FAp5zsY","executionInfo":{"status":"ok","timestamp":1647958796928,"user_tz":-540,"elapsed":2,"user":{"displayName":"이덕수","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04402217723891097609"}}},"execution_count":46,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-zSoMZ-P9v8t"},"source":["## Visualising the Training set results \n","훈련 결과 값 시각화"]},{"cell_type":"code","source":["plt.scatter(x_train, y_train, color ='red') # x축 x_train , y축 y_train 색상은 빨강 \n","plt.plot(x_train, regressor.predict(x_train), color = 'blue')\n","plt.title('임금 vs 경력(Train Set)')\n","plt.xlabel('년차')\n","plt.ylabel('임금')\n","plt.show() "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":743},"id":"G2WycwOL8v0H","executionInfo":{"status":"ok","timestamp":1647958797329,"user_tz":-540,"elapsed":403,"user":{"displayName":"이덕수","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04402217723891097609"}},"outputId":"6ee113ec-c6e2-49aa-909b-67d9fef8d8f1"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 51076 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 44552 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 44221 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 47141 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 45380 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 52264 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 45380 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 52264 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 51076 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 44552 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 44221 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 47141 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"EUX1Vhsv97ZT"},"source":["## Visualising the Test set results\n","테스트 결과값 시각화"]},{"cell_type":"code","source":["plt.scatter(x_test, y_test, color ='red') # x축 x_train , y축 y_train 색상은 빨강 \n","plt.plot(x_train, regressor.predict(x_train), color = 'blue')\n","plt.title('임금 vs 경력 (Test Set)')\n","plt.xlabel('년차')\n","plt.ylabel('임금')\n","plt.show() "],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":743},"id":"nUlkk8b-_bvI","executionInfo":{"status":"ok","timestamp":1647958797329,"user_tz":-540,"elapsed":4,"user":{"displayName":"이덕수","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04402217723891097609"}},"outputId":"74a62009-8507-439b-ff85-0b78bfa4e9f6"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 51076 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 44552 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 44221 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 47141 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 45380 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 52264 missing from current font.\n","  font.set_text(s, 0.0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 45380 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 52264 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 51076 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 44552 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 44221 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n","/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 47141 missing from current font.\n","  font.set_text(s, 0, flags=flags)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}]}